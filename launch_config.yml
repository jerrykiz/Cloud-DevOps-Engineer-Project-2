Description: >
    Project 2 
    This template deploys two Security Groups, an AutoScaling Group with its Launch Configuration,
    an IAM Role with a policy and an InstanceProfile, a Load Balancer with its Listener,
    Listener Rule and Target Group. It exports the URL, which the application can be reached with.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to Resources
    Type: String
  ImageID:
    Description: The ImageId for the servers
    Type: String
  InstanceType:
    Description: The InstanceType of the servers
    Type: String
  EbsVolumeSize:
    Description: The Volume Size of Ebs
    Type: Integer
      
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to the servers (via LoadBalancer)
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  UdacityS3ReadOnlyEC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 
              - "s3:ListBucket"
              - "s3:ListAllMyBuckets"
            Resource: "arn:aws:s3:::*"
      Roles:
        - Ref: UdacityS3ReadOnlyEC2

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: UdacityS3ReadOnlyEC2

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          rm index.html
          aws s3 cp s3://jerrykiz-sam-demo/web-app.zip .
          unzip -o web-app.zip
      ImageId: !Ref ImageID
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref ProfileWithRolesForOurApp
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
              VolumeSize: !Ref EbsVolumeSize

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PRI1-SN
        - Fn::ImportValue: !Sub ${EnvironmentName}-PRI2-SN
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '4'
      TargetGroupARNs:
        - !Ref WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 80
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values: 
              - /
      ListenerArn: !Ref Listener
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID

Outputs:
  URL: 
    Description: A reference to the created VPC
    Value: 
      Fn::Sub:
        - "http://${HostedZoneName}"
        - HostedZoneName: !GetAtt WebAppLB.DNSName
    Export:
      Name: !Sub ${EnvironmentName}-DNSName
